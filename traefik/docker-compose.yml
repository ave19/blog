version: '3'

networks:
  proxy-net:
    external:
      name: "proxy-net"
  candle-net:
    external:
      name: "candle-net"
  elastic-net:
    external:
      name: "elastic-net"

services:
  traefik:
    image: traefik:2.0
    container_name: "traefik"
    networks: 
      - proxy-net
      - candle-net
      - elastic-net
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /home/blog/traefik/etc:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.docker.network=proxy-net"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.middlewares=http_basic_auth"
      - "traefik.http.middlewares.http_basic_auth.basicauth.usersfile=/etc/traefik/http_basic_auth_users"

  whoami:
    image: containous/whoami
    container_name: "whoami"
    networks: 
      - proxy-net
    labels:
# Unencrypted
#      - "traefik.http.routers.whoami.entrypoints=web"
#      - "traefik.http.routers.whoami.rule=PathPrefix(`/whoami`)"
#      - "traefik.http.routers.whoami.middlewares=http_basic_auth"

# SSL Let's Encrypt Test 1
# This didn't work because there's no domain in the rule.  
#      - "traefik.http.routers.whoami.entrypoints=web-secure"
#      - "traefik.http.routers.whoami.rule=PathPrefix(`/whoami`)"
#      - "traefik.http.routers.whoami.tls.certresolver=letsencrypt"

# SSL Let's Encrypt Test 2
# Worked!
#      - "traefik.http.routers.whoami.entrypoints=web-secure"
#      - "traefik.http.routers.whoami.rule=Host(`monitor.jaccard.us`)"
#      - "traefik.http.routers.whoami.tls.certresolver=letsencrypt"

# SSL Let's Encrypt Test 3
# This also works, added http basic auth
      - "traefik.http.routers.whoami.entrypoints=web-secure"
      - "traefik.http.routers.whoami.rule=Host(`monitor.jaccard.us`)"
      - "traefik.http.routers.whoami.tls.certresolver=letsencrypt"
      - "traefik.http.routers.whoami.middlewares=http_basic_auth"




